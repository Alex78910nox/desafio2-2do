# -*- coding: utf-8 -*-
"""jacobi.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1JZo2C6ucEv4gF6ieoMTPPnQPYvR2iYH0
"""

# Definir las ecuaciones del método de Jacobi
import numpy as np

# Coeficientes de las ecuaciones
A = np.array([[52, 20, 25],
              [30, 50, 20],
              [18, 30, 55]])

# Términos independientes
b = np.array([4800, 5810, 5690])

# Definir el número de iteraciones y la tolerancia
n_iterations = 100
tolerance = 1e-5

# Aproximación inicial
x = np.zeros(3)

# Método de Jacobi
def jacobi(A, b, x, n_iterations, tolerance):
    n = len(b)
    x_new = np.copy(x)

    for iteration in range(n_iterations):
        for i in range(n):
            s = sum(A[i][j] * x[j] for j in range(n) if j != i)
            x_new[i] = (b[i] - s) / A[i][i]

        # Verificar convergencia
        if np.linalg.norm(x_new - x, ord=np.inf) < tolerance:
            break
        x = np.copy(x_new)

    return x_new

# Ejecutar el método de Jacobi
solution = jacobi(A, b, x, n_iterations, tolerance)
solution